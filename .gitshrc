#!/bin/bash
# Based on rtomayko's ~/.gitshrc file
# http://www.draconianoverlord.com/files/gitshrc

# git status
alias           s='git status'
alias          sb='git status -sb'
gitalias      wtf='git-wtf'

# git diff
gitalias       d='git diff'
gitalias      dc='git diff --cached'
gitalias       p='git diff --cached'   # mnemonic: "patch"

# git log
gitalias       L='git log'
gitalias       l='git log --pretty=oneline --abbrev-commit --max-count=15'
gitalias      lg="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
gitalias  review='git log -p --max-count=1'

# git add
gitalias       a='git add'
gitalias      au='git add --update'
gitalias      ap='git add --patch'
gitalias      af='git add --force'

# git commit
gitalias  commit='git commit --verbose'
gitalias      ci='git commit --verbose'
gitalias      ca='git commit --verbose --all'
gitalias   amend='git commit --verbose --amend'
gitalias       n='git commit --verbose --amend'
gitalias     cam='git add --update && git commit -m'    # commit all with message

# git fetch
gitalias       f='git fetch'

# git push
gitalias deploy='git push heroku master'
gitalias      pf='git push --force'
gitalias      pt='git push --tags'

# git checkout
gitalias       c='git checkout'

# git branch and remote
gitalias       b='git branch -av'
gitalias      bd='git branch -d'		# soft delete
gitalias      bD='git branch -D'		# hard delete
gitalias      rv='git remote -v'

# git merge
gitalias       m='git merge'

# basic interactive rebase of last 10 commits
gitalias       r='git rebase --interactive HEAD~10'
alias       cont='git rebase --continue'
alias      abort='git merge --abort 2> /dev/null || git rebase --abort 2> /dev/null || git cherry-pick --abort'

# git ls-files
gitalias       o='git ls-files -o --exclude-standard'    # "other"

# misc
gitalias    pick='git cherry-pick'

# bash compatibility
function git_mv {
	# echo "git_mv args: $@"
	for f in "$@"; do
		if [[ $(echo "$f" | head -c 1) = "-" ]] ; then
			# Save command option arguments
			args="$args $f"
		else
			# Process file arguments, but skip over last arg (move destination)
			if [[ "$f" != "${@: -1}" ]] ; then
				if [[ -z $(git ls-files "$f" --error-unmatch 2> /dev/null) ]] ; then
					# Send untracked files to bash mv command
					# echo "Moving untracked file: $f"
					env mv $args "$f" "${@: -1}"
				else
					# Send tracked files to git mv command
					# echo "Moving tracked file: $f"
					git mv $args "$f" "${@: -1}"
				fi
			fi
		fi
	done
	unset args
}
function git_rm {
	# echo "git_rm args: $@"
	for f in "$@"; do
		if [[ $(echo "$f" | head -c 1) = "-" ]] ; then
			# Save command option arguments
			args="$args $f"
			# echo "args: $args"
		else
			# echo "args: $args"
			# Process file arguments
			if [[ -z $(git ls-files "$f" --error-unmatch 2> /dev/null) ]] ; then
				# Send untracked files to bash mv command
				# echo "Deleting untracked file: $f"
				env rm $args "$f"
			else
				# Send tracked files to git mv command
				#echo "Deleting tracked file: $f"
				git rm $args "$f"
			fi
		fi
	done
	unset args
}
alias         mv='git_mv'
alias         rm='git_rm'
# https://github.com/rtomayko/git-sh/issues/20
alias       root='cd $(git rev-parse --git-dir)/..'

# experimental
gitalias  mirror='git reset --hard'
gitalias   stage='git add'
gitalias unstage='git reset HEAD'
gitalias     pop='git reset --soft HEAD^'

# svn
gitalias      si='git si' # svn ignore
gitalias      sr='git svn rebase'
gitalias      sp='git svn dcommit'
gitalias      sf='git svn fetch'

#-------------------------------------------------------------------------------
